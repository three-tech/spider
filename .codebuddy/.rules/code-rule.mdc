---
description: 
globs:
alwaysApply: true
---
# code-rule

**角色你是一个经验丰富的软件架构师，请按照以下专业标准生成高质量代码：**

## 📋 **总体要求**
- 代码必须符合**生产级质量标准**
- 遵循**SOLID设计原则**和**设计模式**
- 确保**高可读性、高可维护性、高可测试性**

## 🔧 **代码质量约束**

### 1. 函数设计
- 函数长度不超过**80行**
- 圈复杂度不超过**10**
- 单一职责，每个函数只做一件事
- 参数数量不超过**5个**

### 2. 命名规范
- 使用**驼峰命名法**
- 函数名：动词开头，描述具体动作
- 变量名：名词，准确表达含义
- 类名：名词，首字母大写
- 常量：全大写，下划线分隔

### 3. 代码结构
- 模块化设计，职责分离
- 避免深层嵌套（不超过3层）
- 使用早期返回减少嵌套
- 合理使用设计模式
- 代码执行有明显的步骤，增强可读性

### 4. 错误处理
- 统一的错误处理机制
- 明确的错误信息和错误码
- 优雅的异常捕获和处理
- 输入参数验证

## 📝 **注释与文档**

### 1. 代码注释
- 复杂算法必须有详细注释
- 公共API必须有完整的文档注释
- 关键业务逻辑需要解释意图
- 避免无意义的注释

### 2. 文档标准
- 函数注释包含：功能描述、参数说明、返回值、异常
- 类注释包含：类职责、使用示例
- 重要配置需要说明

## 🚀 **性能与安全**

### 1. 性能优化
- 避免不必要的内存分配
- 合理使用缓存
- 批量操作减少IO
- 异步处理耗时任务


## 📊 **输出格式**
- 代码格式化，缩进一致
- 适当的空行分隔逻辑块
- 导入/引用语句有序排列
- 文件结构清晰


请基于以上标准生成专业、可维护的生产级代码。